// @generated by protoc-gen-es v1.1.1
// @generated from file transaction/v1/transaction.proto (package transaction.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message transaction.v1.Transaction
 */
export const Transaction = proto3.makeMessageType(
  "transaction.v1.Transaction",
  () => [
    { no: 1, name: "metadata", kind: "message", T: Transaction_Metadata, opt: true },
    { no: 2, name: "contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "network", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "safe_transfer_from", kind: "message", T: Transaction_ERC1155_SafeTransferFrom, oneof: "data" },
    { no: 5, name: "safe_batch_transfer_from", kind: "message", T: Transaction_ERC1155_SafeBatchTransferFrom, oneof: "data" },
    { no: 6, name: "safe_approval_for_all", kind: "message", T: Transaction_ERC1155_SetApprovalForAll, oneof: "data" },
  ],
);

/**
 * @generated from message transaction.v1.Transaction.ERC1155
 */
export const Transaction_ERC1155 = proto3.makeMessageType(
  "transaction.v1.Transaction.ERC1155",
  [],
  {localName: "Transaction_ERC1155"},
);

/**
 * @generated from message transaction.v1.Transaction.ERC1155.SafeTransferFrom
 */
export const Transaction_ERC1155_SafeTransferFrom = proto3.makeMessageType(
  "transaction.v1.Transaction.ERC1155.SafeTransferFrom",
  () => [
    { no: 1, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
  {localName: "Transaction_ERC1155_SafeTransferFrom"},
);

/**
 * @generated from message transaction.v1.Transaction.ERC1155.SafeBatchTransferFrom
 */
export const Transaction_ERC1155_SafeBatchTransferFrom = proto3.makeMessageType(
  "transaction.v1.Transaction.ERC1155.SafeBatchTransferFrom",
  () => [
    { no: 1, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "ids", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 4, name: "values", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
  {localName: "Transaction_ERC1155_SafeBatchTransferFrom"},
);

/**
 * @generated from message transaction.v1.Transaction.ERC1155.SetApprovalForAll
 */
export const Transaction_ERC1155_SetApprovalForAll = proto3.makeMessageType(
  "transaction.v1.Transaction.ERC1155.SetApprovalForAll",
  () => [
    { no: 1, name: "operator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "approved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "Transaction_ERC1155_SetApprovalForAll"},
);

/**
 * @generated from message transaction.v1.Transaction.Metadata
 */
export const Transaction_Metadata = proto3.makeMessageType(
  "transaction.v1.Transaction.Metadata",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "date", kind: "message", T: Timestamp },
    { no: 3, name: "reverted", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "Transaction_Metadata"},
);

