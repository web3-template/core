// @generated by protoc-gen-es v1.1.1
// @generated from file wallet/v1/wallet.proto (package wallet.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Transaction } from "../../transaction/v1/transaction_pb.js";

/**
 * @generated from message wallet.v1.Wallet
 */
export declare class Wallet extends Message<Wallet> {
  /**
   * The account associated with the wallet.
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * The network ID associated with the wallet.
   *
   * @generated from field: uint64 network_id = 2;
   */
  networkId: bigint;

  /**
   * The language of the wallet.
   *
   * @generated from field: wallet.v1.Wallet.Language language = 3;
   */
  language: Wallet_Language;

  /**
   * The theme of the wallet.
   *
   * @generated from field: wallet.v1.Wallet.Theme theme = 4;
   */
  theme: Wallet_Theme;

  /**
   * A list of transactions associated with the wallet.
   *
   * @generated from field: repeated transaction.v1.Transaction transactions = 5;
   */
  transactions: Transaction[];

  /**
   * A list of collectibles associated with the wallet.
   *
   * @generated from field: repeated string collectibles = 6;
   */
  collectibles: string[];

  constructor(data?: PartialMessage<Wallet>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wallet.v1.Wallet";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Wallet;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Wallet;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Wallet;

  static equals(a: Wallet | PlainMessage<Wallet> | undefined, b: Wallet | PlainMessage<Wallet> | undefined): boolean;
}

/**
 * An enumeration of the supported languages for the wallet.
 *
 * @generated from enum wallet.v1.Wallet.Language
 */
export declare enum Wallet_Language {
  /**
   * The language is not specified.
   *
   * @generated from enum value: LANGUAGE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * English language.
   *
   * @generated from enum value: LANGUAGE_EN = 1;
   */
  EN = 1,

  /**
   * German language.
   *
   * @generated from enum value: LANGUAGE_DE = 2;
   */
  DE = 2,

  /**
   * Spanish language.
   *
   * @generated from enum value: LANGUAGE_ES = 3;
   */
  ES = 3,
}

/**
 * An enumeration of the supported themes for the wallet.
 *
 * @generated from enum wallet.v1.Wallet.Theme
 */
export declare enum Wallet_Theme {
  /**
   * The theme is not specified.
   *
   * @generated from enum value: THEME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Light theme.
   *
   * @generated from enum value: THEME_LIGHT = 1;
   */
  LIGHT = 1,

  /**
   * Dark theme.
   *
   * @generated from enum value: THEME_DARK = 2;
   */
  DARK = 2,
}

